//if=while(조건식) 비슷하게 쓰인다. // true/false
//조건식이 거짓이 될 때까지 반복. 
//반복문의 개요
//주어진 조건이 '참'인 경우 일정한 영역의 문장을 반복 수행하다가
//조건식이 거짓이 되는 순간이 오면, 반복 수행을 중단하는 문장이다.
//이러한 반복문에는 while, do~while, for 문 등이 있으며
//반복문의 제어를 위해 break, continue문을 사용하는 경우가 있다.

// [while문]
//조건식을 먼저 비교하여 
//조건식의 처리 결과가 참인 경우, 특정 영역을 반복 수행하는 문장으로,
//반복 횟수가 정해져 있지 않은 경우나, 반복 횟수가 많은 경우 주로 사용한다.
//while문은 조건이 맞지 않은 경우
//반복은 커냥 단 한 번도 실행되지 않을 수 있다.
/*
	while(num<5(true값))
	{
		System.out.println("I Like java"+num);
		num++;//1만큼 증가시켜라
	}

*/

public class Test046
{
	public static void main(String[] args)
	{
		/*
		int n=0;
		while (n<=10)
		{
			System.out.println("n="+n);//n++없으니까 무한반복이다 무서웠다
			n++; //1만큼 증가
		}
		*/
		/*
		int n=0;
		while (n<=10)
		{
			n++; //1만큼 증가
			System.out.println("n="+n);//n++없으니까 무한반복이다 무서웠다
		}
		*/
		/*
		int n=0;
		while (n++<=10)//포스트픽스라 0이랑 크기 비교
		{
			System.out.println("n="+ ++n);//n++없으니까 무한반복이다 무서웠다
		}
		*/

//1부터 100까지의 합을 계산하여 결과를 출력하는 프로그램을 구현한다.
//단, while반복문을 사용한다.

//1부터 100까지의 합 : 5050
// 1부터 시작해서 

//출력 구문이 반복문의 영역 밖에 위치해야 한다.
//1부터 1씩 증가할 변수와 누적합을 담을 변수 두 개의 변수가 필요하다.

int n=1;
int result=0; //누적합을 담을 때엔 0ㅇ로 초기화
while (n<=100)
{
	result += n; //결과를 n만큼 증가시켜라
	n++;
}
System.out.println("1부터 100까지의 합 = " + result);

	}
}



/*
while(num<5(true값))
System.out.println("I Like java"+num);
num++;//1만큼 증가시켜라

do //일단 한번 해보기
{
//처리 구문;(반복영역)
}
while (조건식(true값)); //반복조건

for (수식1(루프변수); 수식2(참,거짓); 수식(증감식)) //제일 많이 쓰임
{
	//처리구문;
	//반복의 횟수를 세기 위한 변수, 반복의 조건, 반복의 조건을 무너트리기 위한 연산
	//(int0
}
*/